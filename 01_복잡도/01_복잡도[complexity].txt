복잡도
    - 알고리즘의 성능을 나타내는 척도
        - 시간 복잡도:특정한 크기 입력에 대하여 알고리즘의 수행 시간 분석
        - 공간 복잡도:특정한 크기 입력에 대하여 알고리즘의 메모리 사용량 분석
    - 동일한 기능을 수행하는 알고리즘이 있다면, 일반적으로 복잡도가 낮을수록 좋은 알고리즘입니다.

N의 범위 (꿀팁)
    500인경우: O(N^3)
    2,000인경우: O(N^2)
    100,000인경우: O(NlogN)
    10,000,000인경우: O(N)

알고리즘 문제 해결 과정
    1. 지문 읽기 및 컴퓨터적 사고
    2. 요구사항(복잡도) 분석
    3. 문제 해결을 위한 아이디어 찾기
    4. 소스코드 설계 및 코딩

    - 문제를 처음 접했을 때, 지문을 모두 이해한 뒤 코드 작성 시작